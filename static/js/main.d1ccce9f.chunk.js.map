{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","code","setCode","error","evalResult","undefined","timeInSeconds","timeInMilliseconds","executionStatus","setExecutionStatus","runTest","length","result","t0","performance","now","eval","err","t1","durationMs","status","consolify","value","util","inspect","showHidden","className","style","display","flexDirection","width","height","language","theme","onChange","event","padding","color","fontFamily","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"00BAIA,SAASA,MAAO,IAAD,UACaC,oDAAS,gCADtB,mKACJC,KADI,cACEC,QADF,yBAEmCF,oDAAS,CAAEG,MAAO,KAAMC,gBAAYC,EAAWC,cAAe,EAAGC,mBAAoB,IAFxH,oKAEJC,gBAFI,cAEaC,mBAFb,cAIX,SAASC,UACL,GAAKT,MAAwB,IAAhBA,KAAKU,OAAlB,CAEA,IAAIR,MAAQ,KACRS,OAAS,KACPC,GAAKC,YAAYC,MAEvB,IACIH,OAASI,KAAKf,MAChB,MAAOgB,KACLd,MAAQc,IAGZ,IAAMC,GAAKJ,YAAYC,MAEjBI,WAAaD,GAAKL,GAElBO,OAAS,CAAEjB,YAAOC,WAAYQ,OAAQN,cAAea,WAAa,IAAMZ,mBAAoBY,YAElGV,mBAAmBW,SAGvB,SAASC,UAAUC,GACf,OAAOC,4CAAKC,QAAQF,EAAO,CAAEG,YAAY,IAG7C,OACI,kEAAKC,UAAU,OACX,kEAAKA,UAAU,iBAAiBC,MAAO,CAAEC,QAAS,OAAQC,cAAe,QACrE,kEAAKH,UAAU,kBACX,2DAAC,mEAAD,CACII,MAAM,OACNC,OAAO,qBACPC,SAAS,aACTC,MAAM,OACNX,MAAOrB,KACPiC,SAAU,SAACC,EAAOb,GAAR,OAAkBpB,QAAQoB,OAG5C,kEAAKI,UAAU,kBAAkBC,MAAO,CAAES,QAAS,OAAQC,MAAO,OAAQC,WAAY,uCAClF,yFACA,qEAAQC,QAAS,kBAAM7B,YAAvB,WAEA,iGAA8BF,gBAAgBF,eAC9C,sGAAmCE,gBAAgBD,oBACnD,oFAAiBc,UAAUb,gBAAgBJ,aAC3C,8EAAWiB,UAAUb,gBAAgBL,WAO1CJ,2B,oEC7Df,0DAMAyC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.d1ccce9f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport util from \"util\";\nimport { ControlledEditor } from \"@monaco-editor/react\";\n\nfunction App() {\n    const [code, setCode] = useState(\"var a = 5, b = 10;\\n\\na + b;\");\n    const [executionStatus, setExecutionStatus] = useState({ error: null, evalResult: undefined, timeInSeconds: 0, timeInMilliseconds: 0 });\n\n    function runTest() {\n        if (!code || code.length === 0) return;\n\n        let error = null;\n        let result = null;\n        const t0 = performance.now();\n\n        try {\n            result = eval(code);\n        } catch (err) {\n            error = err;\n        }\n\n        const t1 = performance.now();\n\n        const durationMs = t1 - t0;\n\n        const status = { error, evalResult: result, timeInSeconds: durationMs / 1000, timeInMilliseconds: durationMs };\n\n        setExecutionStatus(status);\n    }\n\n    function consolify(value: any) {\n        return util.inspect(value, { showHidden: false });\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"main-container\" style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <div className=\"left-container\">\n                    <ControlledEditor\n                        width=\"50vw\"\n                        height=\"calc(100vh - 15px)\"\n                        language=\"javascript\"\n                        theme=\"dark\"\n                        value={code}\n                        onChange={(event, value) => setCode(value as string)}\n                    />\n                </div>\n                <div className=\"right-container\" style={{ padding: \"30px\", color: \"#fff\", fontFamily: 'Consolas, \"Courier New\", monospace' }}>\n                    <h1>Execution Status</h1>\n                    <button onClick={() => runTest()}>Execute</button>\n\n                    <p>Execution time (seconds): {executionStatus.timeInSeconds}</p>\n                    <p>Execution time (milliseconds): {executionStatus.timeInMilliseconds}</p>\n                    <p>Eval result: {consolify(executionStatus.evalResult)}</p>\n                    <p>Error: {consolify(executionStatus.error)}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}